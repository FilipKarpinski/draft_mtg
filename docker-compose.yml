services:
  web:
    image: python:3.12-slim
    restart: always
    build: .
    ports:
      - "8000:8000"
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./app:/code/app
    command: >
      sh -c "
        uv run alembic upgrade head &&
        uv run uvicorn main:app --host 0.0.0.0 --port 8000 --reload"
    networks:
      - draft_mtg_network

  db:
    image: postgres:16
    volumes:
      - postgres_data:/var/lib/postgresql/data
    env_file:
      - .env
    ports:
      - "${POSTGRES_PORT}:5432"
    restart: always
    networks:
      - draft_mtg_network
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER}" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
  
  test:
    profiles: ["test"]
    build: .
    volumes:
      - ./app:/code/app
    command: uv run pytest
    networks:
      - draft_mtg_network

networks:
  draft_mtg_network:
    name: draft_mtg_network

volumes:
  postgres_data:
